//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option or rebuild the Visual Studio project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "11.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class InfrastructureResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal InfrastructureResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.InfrastructureResources", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MongoDB membership provider.
        /// </summary>
        internal static string MembershipProvider_description {
            get {
                return ResourceManager.GetString("MembershipProvider_description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user account has been locked out..
        /// </summary>
        internal static string Membership_AccountLockOut {
            get {
                return ResourceManager.GetString("Membership_AccountLockOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The custom password validation failed..
        /// </summary>
        internal static string Membership_Custom_Password_Validation_Failure {
            get {
                return ResourceManager.GetString("Membership_Custom_Password_Validation_Failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password-answer supplied is invalid..
        /// </summary>
        internal static string Membership_InvalidAnswer {
            get {
                return ResourceManager.GetString("Membership_InvalidAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provider user key supplied is invalid.  It must be of type System.Guid..
        /// </summary>
        internal static string Membership_InvalidProviderUserKey {
            get {
                return ResourceManager.GetString("Membership_InvalidProviderUserKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Membership Provider has not been configured to support password retrieval..
        /// </summary>
        internal static string Membership_PasswordRetrieval_not_supported {
            get {
                return ResourceManager.GetString("Membership_PasswordRetrieval_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user was not found..
        /// </summary>
        internal static string Membership_UserNotFound {
            get {
                return ResourceManager.GetString("Membership_UserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password-answer supplied is incorrect..
        /// </summary>
        internal static string Membership_WrongAnswer {
            get {
                return ResourceManager.GetString("Membership_WrongAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minRequiredNonalphanumericCharacters can not be greater than minRequiredPasswordLength..
        /// </summary>
        internal static string MinRequiredNonalphanumericCharacters_can_not_be_more_than_MinRequiredPasswordLength {
            get {
                return ResourceManager.GetString("MinRequiredNonalphanumericCharacters_can_not_be_more_than_MinRequiredPasswordLeng" +
                        "th", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This provider is not configured to allow password resets. To enable password reset, set enablePasswordReset to \true\&quot; in the configuration file.&quot;.
        /// </summary>
        internal static string Not_configured_to_support_password_resets {
            get {
                return ResourceManager.GetString("Not_configured_to_support_password_resets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; must not be empty..
        /// </summary>
        internal static string Parameter_can_not_be_empty {
            get {
                return ResourceManager.GetString("Parameter_can_not_be_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; must not contain the following character(s) &apos;{1}&apos;..
        /// </summary>
        internal static string Parameter_contains_invalid_characters {
            get {
                return ResourceManager.GetString("Parameter_contains_invalid_characters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; is too long: it must not exceed {1} chars in length..
        /// </summary>
        internal static string Parameter_too_long {
            get {
                return ResourceManager.GetString("Parameter_too_long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter &apos;{0}&apos; does not match the regular expression specified in config file..
        /// </summary>
        internal static string Password_does_not_match_regular_expression {
            get {
                return ResourceManager.GetString("Password_does_not_match_regular_expression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non alpha numeric characters in &apos;{0}&apos; needs to be greater than or equal to &apos;{1}&apos;..
        /// </summary>
        internal static string Password_need_more_non_alpha_numeric_chars {
            get {
                return ResourceManager.GetString("Password_need_more_non_alpha_numeric_chars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of parameter &apos;{0}&apos; needs to be greater or equal to &apos;{1}&apos;..
        /// </summary>
        internal static string Password_too_short {
            get {
                return ResourceManager.GetString("Password_too_short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred. Please check the Event Log..
        /// </summary>
        internal static string ProviderException {
            get {
                return ResourceManager.GetString("ProviderException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password format specified is invalid..
        /// </summary>
        internal static string Provider_bad_password_format {
            get {
                return ResourceManager.GetString("Provider_bad_password_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must specify a non-autogenerated machine key to store passwords in the encrypted or hashed formats. Change the machineKey configuration to use a non-autogenerated validation and decryption key..
        /// </summary>
        internal static string Provider_can_not_autogenerate_machine_key_with_encrypted_or_hashed_password_format {
            get {
                return ResourceManager.GetString("Provider_can_not_autogenerate_machine_key_with_encrypted_or_hashed_password_forma" +
                        "t", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured settings are invalid: Hashed passwords cannot be retrieved. Either set the password format to different type, or set supportsPasswordRetrieval to false..
        /// </summary>
        internal static string Provider_can_not_retrieve_hashed_password {
            get {
                return ResourceManager.GetString("Provider_can_not_retrieve_hashed_password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute not recognized &apos;{0}&apos;.
        /// </summary>
        internal static string Provider_unrecognized_attribute {
            get {
                return ResourceManager.GetString("Provider_unrecognized_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string String1 {
            get {
                return ResourceManager.GetString("String1", resourceCulture);
            }
        }
    }
}
