<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MembershipProvider_description" xml:space="preserve">
    <value>MongoDB membership provider</value>
  </data>
  <data name="Membership_AccountLockOut" xml:space="preserve">
    <value>The user account has been locked out.</value>
  </data>
  <data name="Membership_Custom_Password_Validation_Failure" xml:space="preserve">
    <value>The custom password validation failed.</value>
  </data>
  <data name="Membership_InvalidAnswer" xml:space="preserve">
    <value>The password-answer supplied is invalid.</value>
  </data>
  <data name="Membership_InvalidProviderUserKey" xml:space="preserve">
    <value>The provider user key supplied is invalid.  It must be of type System.Guid.</value>
  </data>
  <data name="Membership_PasswordRetrieval_not_supported" xml:space="preserve">
    <value>This Membership Provider has not been configured to support password retrieval.</value>
  </data>
  <data name="Membership_UserNotFound" xml:space="preserve">
    <value>The user was not found.</value>
  </data>
  <data name="Membership_WrongAnswer" xml:space="preserve">
    <value>The password-answer supplied is incorrect.</value>
  </data>
  <data name="MinRequiredNonalphanumericCharacters_can_not_be_more_than_MinRequiredPasswordLength" xml:space="preserve">
    <value>The minRequiredNonalphanumericCharacters can not be greater than minRequiredPasswordLength.</value>
  </data>
  <data name="Not_configured_to_support_password_resets" xml:space="preserve">
    <value>This provider is not configured to allow password resets. To enable password reset, set enablePasswordReset to \true\" in the configuration file."</value>
  </data>
  <data name="Parameter_can_not_be_empty" xml:space="preserve">
    <value>The parameter '{0}' must not be empty.</value>
  </data>
  <data name="Parameter_contains_invalid_characters" xml:space="preserve">
    <value>The parameter '{0}' must not contain the following character(s) '{1}'.</value>
  </data>
  <data name="Parameter_too_long" xml:space="preserve">
    <value>The parameter '{0}' is too long: it must not exceed {1} chars in length.</value>
  </data>
  <data name="Password_does_not_match_regular_expression" xml:space="preserve">
    <value>The parameter '{0}' does not match the regular expression specified in config file.</value>
  </data>
  <data name="Password_need_more_non_alpha_numeric_chars" xml:space="preserve">
    <value>Non alpha numeric characters in '{0}' needs to be greater than or equal to '{1}'.</value>
  </data>
  <data name="Password_too_short" xml:space="preserve">
    <value>The length of parameter '{0}' needs to be greater or equal to '{1}'.</value>
  </data>
  <data name="ProviderException" xml:space="preserve">
    <value>An exception occurred. Please check the Event Log.</value>
  </data>
  <data name="Provider_bad_password_format" xml:space="preserve">
    <value>Password format specified is invalid.</value>
  </data>
  <data name="Provider_can_not_autogenerate_machine_key_with_encrypted_or_hashed_password_format" xml:space="preserve">
    <value>You must specify a non-autogenerated machine key to store passwords in the encrypted or hashed formats. Change the machineKey configuration to use a non-autogenerated validation and decryption key.</value>
  </data>
  <data name="Provider_can_not_retrieve_hashed_password" xml:space="preserve">
    <value>Configured settings are invalid: Hashed passwords cannot be retrieved. Either set the password format to different type, or set supportsPasswordRetrieval to false.</value>
  </data>
  <data name="Provider_unrecognized_attribute" xml:space="preserve">
    <value>Attribute not recognized '{0}'</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
</root>